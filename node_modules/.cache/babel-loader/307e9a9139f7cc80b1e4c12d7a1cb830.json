{"ast":null,"code":"var _jsxFileName = \"/home/christoph/Desktop/xdemo/src/components/Wrapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, setState } from \"react\";\nimport \"./Wrapper.css\";\nimport Card from \"./Card\";\nimport Bottom from \"./Bottom\";\nimport { data } from \"./data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst computedFeatures = {\n  nrOfLikeComputations: 0,\n  nrOfDislikeComputations: 0,\n  avgLiked: [0, 0],\n  avgDisliked: [0, 0]\n};\n\nconst Wrapper = ({\n  flipCard,\n  setPosition\n}) => {\n  _s();\n\n  const [products, setProducts] = useState(data);\n  const [likedProducts, setLikedProducts] = useState([]);\n  const [dislikedProducts, setDislikedProducts] = useState([]);\n  const [displayedProduct, setDisplayedProduct] = useState(0);\n\n  const handleChoice = (id, action) => {\n    let sp = products.filter(product => product.name == id);\n    let xp = sp[0].x;\n    let yp = sp[0].y;\n    setPosition(xp, yp);\n\n    switch (action) {\n      case \"ADD_TO_LIKED_PRODUCTS\":\n        let nr = computedFeatures.nrOfLikeComputations;\n        let selectedProduct = products.filter(product => product.name == id);\n        console.log(selectedProduct);\n        let x = selectedProduct[0].x;\n        let y = selectedProduct[0].y;\n        let newLikedX = nr / (nr + 1) * computedFeatures.avgLiked[0] + 1 / (nr + 1) * x;\n        let newLikedY = nr / (nr + 1) * computedFeatures.avgLiked[1] + 1 / (nr + 1) * y;\n        setLikedProducts([...likedProducts], selectedProduct[0]);\n        let cleanProducts = products.filter(product => product.name != id);\n        setProducts(cleanProducts);\n        let minDist = 1000000;\n        let minIdx = 0;\n\n        for (let i = 0; i < cleanProducts.length; i++) {\n          let runningDist = (cleanProducts[i].x - newLikedX) ** 2 + (cleanProducts[i].y - newLikedY) ** 2;\n\n          if (computedFeatures.avgDisliked[0] != 0 && computedFeatures.avgDisliked[1] != 0) {\n            runningDist += -0.3 * (cleanProducts[i].x - computedFeatures.avgDisliked[0]) ** 2;\n            runningDist += -0.3 * (cleanProducts[i].y - computedFeatures.avgDisliked[1]) ** 2;\n          }\n\n          if (runningDist < minDist) {\n            minDist = runningDist;\n            minIdx = i;\n          }\n        }\n\n        console.log(\"MIN-IDX\");\n        console.log(minIdx);\n        console.log(\"MIN-DIS\");\n        console.log(minDist);\n        computedFeatures.nrOfLikeComputations = nr + 1;\n        computedFeatures.avgLiked = [newLikedX, newLikedY];\n        setDisplayedProduct(cleanProducts[minIdx].name);\n        console.log(computedFeatures);\n        break;\n\n      case \"ADD_TO_DISLIKED_PRODUCTS\":\n        let nrDL = computedFeatures.nrOfDislikeComputations;\n        let selectedProductDL = products.filter(product => product.name === id);\n        let xDL = selectedProductDL[0].x;\n        let yDL = selectedProductDL[0].y;\n        let newLikedXDL = nrDL / (nrDL + 1) * computedFeatures.avgDisliked[0] + 1 / (nrDL + 1) * xDL;\n        let newLikedYDL = nrDL / (nrDL + 1) * computedFeatures.avgDisliked[1] + 1 / (nrDL + 1) * yDL;\n        setLikedProducts([...dislikedProducts], selectedProductDL[0]);\n        let cleanProductsDL = products.filter(product => product.name != id);\n        setProducts(cleanProductsDL);\n        let minDistDL = 1000;\n        let minIdxDL = 0;\n\n        for (let i = 0; i < cleanProductsDL.length; i++) {\n          let runningDistDL = (cleanProductsDL[i].x - computedFeatures.avgLiked[0]) ** 2 + (cleanProductsDL[i].y - computedFeatures.avgLiked[1]) ** 2;\n\n          if (computedFeatures.avgDisliked[0] != 0 && computedFeatures.avgDisliked[1] != 0) {\n            runningDistDL += -0.3 * (cleanProductsDL[i].x - computedFeatures.avgDisliked[0]) ** 2;\n            runningDistDL += -0.3 * (cleanProductsDL[i].y - computedFeatures.avgDisliked[1]) ** 2;\n          } else {\n            computedFeatures.avgDisliked[0] = newLikedXDL;\n            computedFeatures.avgDisliked[1] = newLikedYDL;\n          }\n\n          if (runningDistDL < minDistDL) {\n            minDistDL = runningDistDL;\n            minIdxDL = i;\n          }\n        }\n\n        computedFeatures.nrOfDislikeComputations = nrDL + 1;\n        computedFeatures.avgDisliked = [newLikedXDL, newLikedYDL];\n        setDisplayedProduct(cleanProductsDL[minIdxDL].name);\n        break;\n\n      default:\n        return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outer-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      id: displayedProduct,\n      handleChoice: handleChoice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bottom, {\n      flipCard: flipCard,\n      currentId: displayedProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Wrapper, \"/iceErVN0VYqlfJFIrzxxNxMYXc=\");\n\n_c = Wrapper;\nexport default Wrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wrapper\");","map":{"version":3,"sources":["/home/christoph/Desktop/xdemo/src/components/Wrapper.js"],"names":["React","useState","setState","Card","Bottom","data","computedFeatures","nrOfLikeComputations","nrOfDislikeComputations","avgLiked","avgDisliked","Wrapper","flipCard","setPosition","products","setProducts","likedProducts","setLikedProducts","dislikedProducts","setDislikedProducts","displayedProduct","setDisplayedProduct","handleChoice","id","action","sp","filter","product","name","xp","x","yp","y","nr","selectedProduct","console","log","newLikedX","newLikedY","cleanProducts","minDist","minIdx","i","length","runningDist","nrDL","selectedProductDL","xDL","yDL","newLikedXDL","newLikedYDL","cleanProductsDL","minDistDL","minIdxDL","runningDistDL"],"mappings":"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","sourcesContent":["import React, { useState, setState } from \"react\";\nimport \"./Wrapper.css\";\nimport Card from \"./Card\";\nimport Bottom from \"./Bottom\";\nimport { data } from \"./data\";\n\nconst computedFeatures = {\n  nrOfLikeComputations: 0,\n  nrOfDislikeComputations: 0,\n  avgLiked: [0, 0],\n  avgDisliked: [0, 0],\n};\n\nconst Wrapper = ({ flipCard, setPosition }) => {\n  const [products, setProducts] = useState(data);\n  const [likedProducts, setLikedProducts] = useState([]);\n  const [dislikedProducts, setDislikedProducts] = useState([]);\n  const [displayedProduct, setDisplayedProduct] = useState(0);\n\n  const handleChoice = (id, action) => {\n    let sp = products.filter((product) => product.name == id);\n    let xp = sp[0].x;\n    let yp = sp[0].y;\n\n    setPosition(xp, yp)\n\n    switch (action) {\n      case \"ADD_TO_LIKED_PRODUCTS\":\n        let nr = computedFeatures.nrOfLikeComputations;\n        let selectedProduct = products.filter((product) => product.name == id);\n\n        console.log(selectedProduct);\n\n        let x = selectedProduct[0].x;\n        let y = selectedProduct[0].y;\n\n        let newLikedX =\n          (nr / (nr + 1)) * computedFeatures.avgLiked[0] + (1 / (nr + 1)) * x;\n        let newLikedY =\n          (nr / (nr + 1)) * computedFeatures.avgLiked[1] + (1 / (nr + 1)) * y;\n\n        setLikedProducts([...likedProducts], selectedProduct[0]);\n        let cleanProducts = products.filter((product) => product.name != id);\n        setProducts(cleanProducts);\n\n        let minDist = 1000000;\n        let minIdx = 0;\n        for (let i = 0; i < cleanProducts.length; i++) {\n          let runningDist =\n            (cleanProducts[i].x - newLikedX) ** 2 +\n            (cleanProducts[i].y - newLikedY) ** 2;\n\n          if (\n            computedFeatures.avgDisliked[0] != 0 &&\n            computedFeatures.avgDisliked[1] != 0\n          ) {\n            runningDist +=\n              -0.3 *\n              (cleanProducts[i].x - computedFeatures.avgDisliked[0]) ** 2;\n            runningDist +=\n              -0.3 *\n              (cleanProducts[i].y - computedFeatures.avgDisliked[1]) ** 2;\n          }\n\n          if (runningDist < minDist) {\n            minDist = runningDist;\n            minIdx = i;\n          }\n        }\n\n        console.log(\"MIN-IDX\");\n        console.log(minIdx);\n\n        console.log(\"MIN-DIS\");\n        console.log(minDist);\n\n        computedFeatures.nrOfLikeComputations = nr + 1;\n        computedFeatures.avgLiked = [newLikedX, newLikedY];\n        setDisplayedProduct(cleanProducts[minIdx].name);\n\n        console.log(computedFeatures);\n        break;\n      case \"ADD_TO_DISLIKED_PRODUCTS\":\n        let nrDL = computedFeatures.nrOfDislikeComputations;\n        let selectedProductDL = products.filter(\n          (product) => product.name === id\n        );\n\n        let xDL = selectedProductDL[0].x;\n        let yDL = selectedProductDL[0].y;\n\n        let newLikedXDL =\n          (nrDL / (nrDL + 1)) * computedFeatures.avgDisliked[0] +\n          (1 / (nrDL + 1)) * xDL;\n        let newLikedYDL =\n          (nrDL / (nrDL + 1)) * computedFeatures.avgDisliked[1] +\n          (1 / (nrDL + 1)) * yDL;\n\n        setLikedProducts([...dislikedProducts], selectedProductDL[0]);\n        let cleanProductsDL = products.filter((product) => product.name != id);\n        setProducts(cleanProductsDL);\n\n        let minDistDL = 1000;\n        let minIdxDL = 0;\n        for (let i = 0; i < cleanProductsDL.length; i++) {\n          let runningDistDL =\n            (cleanProductsDL[i].x - computedFeatures.avgLiked[0]) ** 2 +\n            (cleanProductsDL[i].y - computedFeatures.avgLiked[1]) ** 2;\n\n          if (\n            computedFeatures.avgDisliked[0] != 0 &&\n            computedFeatures.avgDisliked[1] != 0\n          ) {\n            runningDistDL +=\n              -0.3 *\n              (cleanProductsDL[i].x - computedFeatures.avgDisliked[0]) ** 2;\n            runningDistDL +=\n              -0.3 *\n              (cleanProductsDL[i].y - computedFeatures.avgDisliked[1]) ** 2;\n          } else {\n            computedFeatures.avgDisliked[0] = newLikedXDL;\n            computedFeatures.avgDisliked[1] = newLikedYDL;\n          }\n\n          if (runningDistDL < minDistDL) {\n            minDistDL = runningDistDL;\n            minIdxDL = i;\n          }\n        }\n\n        computedFeatures.nrOfDislikeComputations = nrDL + 1;\n        computedFeatures.avgDisliked = [newLikedXDL, newLikedYDL];\n        setDisplayedProduct(cleanProductsDL[minIdxDL].name);\n\n        break;\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"outer-wrap\">\n      <Card id={displayedProduct} handleChoice={handleChoice} />\n      <Bottom flipCard={flipCard} currentId={displayedProduct} />\n    </div>\n  );\n};\n\nexport default Wrapper;\n"]},"metadata":{},"sourceType":"module"}