{"ast":null,"code":"var _jsxFileName = \"/home/christoph/Desktop/xdemo/src/components/Bottom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Bottom.css\";\nimport { FaGamepad, FaBuffer } from \"react-icons/fa\";\nimport { GiRadarSweep } from \"react-icons/gi\";\nimport { RiArrowGoForwardFill } from \"react-icons/ri\";\nimport { data } from \"./data\";\nimport ReactCardFlip from \"react-card-flip\";\n/*\n1. save current idx\n2. search through imgs with highes similarity\n3. letzte 10 idx von array picken\n4. an bottom geben\n\n// BOTTOM drehen??????\n\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst products = data;\n\nconst Bottom = ({\n  flipCard,\n  currentId\n}) => {\n  _s();\n\n  console.log(\"CURRENT ID\");\n  console.log(currentId);\n  const [bestFive, setBestFive] = useState([]);\n  const [filterActive, setFilterActive] = useState(false);\n  const [front, setFront] = useState(true);\n\n  const closestFive = () => {\n    setFilterActive(true);\n    setFront(front => !front);\n    const currentshoe = products.filter(product => product.name == currentId)[0];\n    let cleanProducts = products.filter(product => product.name != currentId);\n    let Idx = [];\n\n    for (let i = 0; i < cleanProducts.length; i++) {\n      let runningDist = (cleanProducts[i].x - currentshoe.x) ** 2 + (cleanProducts[i].y - currentshoe.y) ** 2;\n      Idx.push({\n        distance: runningDist,\n        name: cleanProducts[i].name\n      });\n    }\n\n    var result = Array.from(Array(Idx.length).keys()).sort((a, b) => Idx[a].distance < Idx[b].distance ? -1 : Idx[b].distance < Idx[a].distance | 0);\n    console.log(result);\n    console.log(Idx[48].distance);\n    console.log(Idx[64].distance);\n    const tmpFive = [];\n\n    for (let i = 0; i < 5; i++) {\n      tmpFive.push(Idx[result[i]].name);\n    }\n\n    setBestFive(tmpFive);\n    setFilterActive(true);\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"bottom-outer\">\n    _jsxDEV(ReactCardFlip, {\n      isFlipped: front,\n      flipDirection: \"horizontal\",\n      className: \"bottom-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back\",\n          onClick: () => setFront(!front),\n          children: /*#__PURE__*/_jsxDEV(RiArrowGoForwardFill, {\n            className: \"expand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), data.filter(shoe => bestFive.includes(shoe.name)).map((shoe, idx) => {\n          let indivStyle = {\n            position: \"relative\",\n            height: `${100}px`,\n            marginRight: \"10px\",\n            width: `${100}px`\n          };\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"pic\",\n            style: indivStyle,\n            src: `./shoes/${shoe.name}.jpg`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ctrl-btn\",\n          onClick: () => closestFive(),\n          children: \"List Similar (5)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ctrl-btn\",\n          children: \"Map Similar (All)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this) // </div>\n\n  );\n};\n\n_s(Bottom, \"x26RYV0fMPyAMpwBvDhYhgBSCmQ=\");\n\n_c = Bottom;\n{\n  /* <ReactCardFlip isFlipped={front} flipDirection=\"horizontal\">\n  <Wrapper flipCard={flipCard} setPosition={setPosition} />\n  <WrapperBack position={position} />\n  </ReactCardFlip>; */\n}\nexport default Bottom; // return (\n//   <div className=\"bottom-outer\">\n//   <ReactCardFlip isFlipped={front} flipDirection=\"horizontal\">\n//       {/* <RiArrowGoForwardFill className=\"expand\"/> */}\n//       {filterActive ? (\n//         data\n//           .filter((shoe) => bestFive.includes(shoe.name))\n//           .map((shoe, idx) => {\n//             let indivStyle = {\n//               position: \"relative\",\n//               height: `${100}px`,\n//               marginRight: \"10px\",\n//               width: `${100}px`,\n//             };\n//             return (\n//               <img\n//                 className=\"pic\"\n//                 style={indivStyle}\n//                 src={`./shoes/${shoe.name}.jpg`}\n//               />\n//             );\n//           })\n//       ) : (\n//         <div className=\"bottom-control\">\n//           <button className=\"ctrl-btn\" onClick={() => closestFive()}>\n//             List Similar\n//           </button>\n//           <button className=\"ctrl-btn\" onClick={() => closestFive()}>\n//             Map Similar\n//           </button>\n//         </div>\n//       )}\n//   </ReactCardFlip>\n//   </div>\n// );\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"Bottom\");","map":{"version":3,"sources":["/home/christoph/Desktop/xdemo/src/components/Bottom.js"],"names":["React","useState","FaGamepad","FaBuffer","GiRadarSweep","RiArrowGoForwardFill","data","ReactCardFlip","products","Bottom","flipCard","currentId","console","log","bestFive","setBestFive","filterActive","setFilterActive","front","setFront","closestFive","currentshoe","filter","product","name","cleanProducts","Idx","i","length","runningDist","x","y","push","distance","result","Array","from","keys","sort","a","b","tmpFive","shoe","includes","map","idx","indivStyle","position","height","marginRight","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Bottom.css\";\nimport { FaGamepad, FaBuffer } from \"react-icons/fa\";\nimport { GiRadarSweep } from \"react-icons/gi\";\nimport { RiArrowGoForwardFill } from \"react-icons/ri\";\nimport { data } from \"./data\";\nimport ReactCardFlip from \"react-card-flip\";\n\n/*\n1. save current idx\n2. search through imgs with highes similarity\n3. letzte 10 idx von array picken\n4. an bottom geben\n\n// BOTTOM drehen??????\n\n*/\n\nconst products = data;\n\nconst Bottom = ({ flipCard, currentId }) => {\n  console.log(\"CURRENT ID\");\n  console.log(currentId);\n\n  const [bestFive, setBestFive] = useState([]);\n  const [filterActive, setFilterActive] = useState(false);\n  const [front, setFront] = useState(true);\n\n  const closestFive = () => {\n    setFilterActive(true);\n    setFront((front) => !front);\n    const currentshoe = products.filter(\n      (product) => product.name == currentId\n    )[0];\n    let cleanProducts = products.filter((product) => product.name != currentId);\n\n    let Idx = [];\n    for (let i = 0; i < cleanProducts.length; i++) {\n      let runningDist =\n        (cleanProducts[i].x - currentshoe.x) ** 2 +\n        (cleanProducts[i].y - currentshoe.y) ** 2;\n\n      Idx.push({ distance: runningDist, name: cleanProducts[i].name });\n    }\n\n    var result = Array.from(Array(Idx.length).keys()).sort((a, b) =>\n      Idx[a].distance < Idx[b].distance\n        ? -1\n        : (Idx[b].distance < Idx[a].distance) | 0\n    );\n\n    console.log(result);\n    console.log(Idx[48].distance);\n    console.log(Idx[64].distance);\n\n    const tmpFive = [];\n    for (let i = 0; i < 5; i++) {\n      tmpFive.push(Idx[result[i]].name);\n    }\n\n    setBestFive(tmpFive);\n    setFilterActive(true);\n  };\n\n  return (\n    // <div className=\"bottom-outer\">\n      <ReactCardFlip\n        isFlipped={front}\n        flipDirection=\"horizontal\"\n        className=\"bottom-card\"\n      >\n        <div className=\"bottom-control\">\n          <button className=\"back\" onClick={() => setFront(!front)}>\n            <RiArrowGoForwardFill className=\"expand\" />\n          </button>\n          {data\n            .filter((shoe) => bestFive.includes(shoe.name))\n            .map((shoe, idx) => {\n              let indivStyle = {\n                position: \"relative\",\n                height: `${100}px`,\n                marginRight: \"10px\",\n                width: `${100}px`,\n              };\n              return (\n                <img\n                  className=\"pic\"\n                  style={indivStyle}\n                  src={`./shoes/${shoe.name}.jpg`}\n                />\n              );\n            })}\n        </div>\n        <div className=\"bottom-control\">\n          <button className=\"ctrl-btn\" onClick={() => closestFive()}>\n            List Similar (5)\n          </button>\n          <button className=\"ctrl-btn\">Map Similar (All)</button>\n        </div>\n      </ReactCardFlip>\n    // </div>\n  );\n};\n\n{\n  /* <ReactCardFlip isFlipped={front} flipDirection=\"horizontal\">\n  <Wrapper flipCard={flipCard} setPosition={setPosition} />\n  <WrapperBack position={position} />\n</ReactCardFlip>; */\n}\n\nexport default Bottom;\n\n// return (\n//   <div className=\"bottom-outer\">\n//   <ReactCardFlip isFlipped={front} flipDirection=\"horizontal\">\n//       {/* <RiArrowGoForwardFill className=\"expand\"/> */}\n//       {filterActive ? (\n//         data\n//           .filter((shoe) => bestFive.includes(shoe.name))\n//           .map((shoe, idx) => {\n//             let indivStyle = {\n//               position: \"relative\",\n//               height: `${100}px`,\n//               marginRight: \"10px\",\n//               width: `${100}px`,\n//             };\n//             return (\n//               <img\n//                 className=\"pic\"\n//                 style={indivStyle}\n//                 src={`./shoes/${shoe.name}.jpg`}\n//               />\n//             );\n//           })\n//       ) : (\n//         <div className=\"bottom-control\">\n//           <button className=\"ctrl-btn\" onClick={() => closestFive()}>\n//             List Similar\n//           </button>\n//           <button className=\"ctrl-btn\" onClick={() => closestFive()}>\n//             Map Similar\n//           </button>\n//         </div>\n//       )}\n//   </ReactCardFlip>\n//   </div>\n// );\n// };\n"]},"metadata":{},"sourceType":"module"}