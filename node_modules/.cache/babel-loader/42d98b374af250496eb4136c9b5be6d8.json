{"ast":null,"code":"var _jsxFileName = \"/home/christoph/Desktop/xdemo/src/components/Wrapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, setState } from \"react\";\nimport \"./Wrapper.css\";\nimport Card from \"./Card\";\nimport Bottom from \"./Bottom\";\nimport { data } from \"./data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst computedFeatures = {\n  nrOfLikeComputations: 0,\n  nrOfDislikeComputations: 0,\n  avgLiked: [0, 0],\n  avgDisliked: [0, 0]\n};\n\nconst Wrapper = ({\n  flipCard,\n  setPosition\n}) => {\n  _s();\n\n  const [products, setProducts] = useState(data);\n  const [likedProducts, setLikedProducts] = useState([]);\n  const [dislikedProducts, setDislikedProducts] = useState([]);\n  const [displayedProduct, setDisplayedProduct] = useState(0);\n\n  const handleChoice = (id, action) => {\n    console.log(\"LIKED: \");\n    console.log(\"X: \", computedFeatures.avgLiked[0], \"Y: \", 2000 - computedFeatures.avgLiked[1] - 100);\n    console.log(\"DISLIKED: \");\n    console.log(\"X: \", computedFeatures.avgDisliked[0], \"Y: \", 2000 - computedFeatures.avgDisliked[1] - 100);\n    console.log(id);\n\n    switch (action) {\n      case \"ADD_TO_LIKED_PRODUCTS\":\n        let nr = computedFeatures.nrOfLikeComputations;\n        let selectedProduct = products.filter(product => product.name === id);\n        let x = selectedProduct[0].features[0];\n        let y = selectedProduct[0].features[1];\n        let newLikedX = nr / (nr + 1) * computedFeatures.avgLiked[0] + 1 / (nr + 1) * x;\n        let newLikedY = nr / (nr + 1) * computedFeatures.avgLiked[1] + 1 / (nr + 1) * y;\n        setLikedProducts([...likedProducts], selectedProduct[0]);\n        let cleanProducts = products.filter(product => product.name != id);\n        setProducts(cleanProducts);\n        let minDist = 1000000;\n        let minIdx = 0;\n\n        for (let i = 0; i < cleanProducts.length; i++) {\n          let runningDist = (cleanProducts[i].features[0] - newLikedX) ** 2 + (cleanProducts[i].features[1] - newLikedY) ** 2;\n\n          if (computedFeatures.avgDisliked[0] != 0 && computedFeatures.avgDisliked[1] != 0) {\n            runningDist += -0.3 * (cleanProducts[i].features[0] - computedFeatures.avgDisliked[0]) ** 2;\n            runningDist += -0.3 * (cleanProducts[i].features[1] - computedFeatures.avgDisliked[1]) ** 2;\n          }\n\n          if (runningDist < minDist) {\n            minDist = runningDist;\n            minIdx = i;\n          }\n        }\n\n        console.log(\"MIN-IDX\");\n        console.log(minIdx);\n        console.log(\"MIN-DIS\");\n        console.log(minDist);\n        computedFeatures.nrOfLikeComputations = nr + 1;\n        computedFeatures.avgLiked = [newLikedX, newLikedY];\n        setDisplayedProduct(cleanProducts[minIdx].name);\n        console.log(computedFeatures);\n        break;\n\n      case \"ADD_TO_DISLIKED_PRODUCTS\":\n        let nrDL = computedFeatures.nrOfDislikeComputations;\n        let selectedProductDL = products.filter(product => product.name === id);\n        let xDL = selectedProductDL[0].features[0];\n        let yDL = selectedProductDL[0].features[1];\n        let newLikedXDL = nrDL / (nrDL + 1) * computedFeatures.avgDisliked[0] + 1 / (nrDL + 1) * xDL;\n        let newLikedYDL = nrDL / (nrDL + 1) * computedFeatures.avgDisliked[1] + 1 / (nrDL + 1) * yDL;\n        setLikedProducts([...dislikedProducts], selectedProductDL[0]);\n        let cleanProductsDL = products.filter(product => product.name != id);\n        setProducts(cleanProductsDL);\n        let minDistDL = 1000;\n        let minIdxDL = 0;\n\n        for (let i = 0; i < cleanProductsDL.length; i++) {\n          let runningDistDL = (cleanProductsDL[i].features[0] - computedFeatures.avgLiked[0]) ** 2 + (cleanProductsDL[i].features[1] - computedFeatures.avgLiked[1]) ** 2;\n\n          if (computedFeatures.avgDisliked[0] != 0 && computedFeatures.avgDisliked[1] != 0) {\n            runningDistDL += -0.3 * (cleanProductsDL[i].features[0] - computedFeatures.avgDisliked[0]) ** 2;\n            runningDistDL += -0.3 * (cleanProductsDL[i].features[1] - computedFeatures.avgDisliked[1]) ** 2;\n          } else {\n            computedFeatures.avgDisliked[0] = newLikedXDL;\n            computedFeatures.avgDisliked[1] = newLikedYDL;\n          }\n\n          if (runningDistDL < minDistDL) {\n            minDistDL = runningDistDL;\n            minIdxDL = i;\n          }\n        }\n\n        computedFeatures.nrOfDislikeComputations = nrDL + 1;\n        computedFeatures.avgDisliked = [newLikedXDL, newLikedYDL];\n        setDisplayedProduct(cleanProductsDL[minIdxDL].name);\n        break;\n\n      default:\n        return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outer-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      id: displayedProduct,\n      handleChoice: handleChoice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bottom, {\n      flipCard: flipCard,\n      currentId: 217\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Wrapper, \"/iceErVN0VYqlfJFIrzxxNxMYXc=\");\n\n_c = Wrapper;\nexport default Wrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wrapper\");","map":{"version":3,"sources":["/home/christoph/Desktop/xdemo/src/components/Wrapper.js"],"names":["React","useState","setState","Card","Bottom","data","computedFeatures","nrOfLikeComputations","nrOfDislikeComputations","avgLiked","avgDisliked","Wrapper","flipCard","setPosition","products","setProducts","likedProducts","setLikedProducts","dislikedProducts","setDislikedProducts","displayedProduct","setDisplayedProduct","handleChoice","id","action","console","log","nr","selectedProduct","filter","product","name","x","features","y","newLikedX","newLikedY","cleanProducts","minDist","minIdx","i","length","runningDist","nrDL","selectedProductDL","xDL","yDL","newLikedXDL","newLikedYDL","cleanProductsDL","minDistDL","minIdxDL","runningDistDL"],"mappings":"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","sourcesContent":["import React, { useState, setState } from \"react\";\nimport \"./Wrapper.css\";\nimport Card from \"./Card\";\nimport Bottom from \"./Bottom\";\nimport { data } from \"./data\";\n\nconst computedFeatures = {\n  nrOfLikeComputations: 0,\n  nrOfDislikeComputations: 0,\n  avgLiked: [0, 0],\n  avgDisliked: [0, 0],\n};\n\nconst Wrapper = ({ flipCard, setPosition }) => {\n  const [products, setProducts] = useState(data);\n  const [likedProducts, setLikedProducts] = useState([]);\n  const [dislikedProducts, setDislikedProducts] = useState([]);\n  const [displayedProduct, setDisplayedProduct] = useState(0);\n\n  const handleChoice = (id, action) => {\n    console.log(\"LIKED: \");\n    console.log(\n      \"X: \",\n      computedFeatures.avgLiked[0],\n      \"Y: \",\n      2000 - computedFeatures.avgLiked[1] - 100\n    );\n    console.log(\"DISLIKED: \");\n    console.log(\n      \"X: \",\n      computedFeatures.avgDisliked[0],\n      \"Y: \",\n      2000 - computedFeatures.avgDisliked[1] - 100\n    );\n    console.log(id);\n    switch (action) {\n      case \"ADD_TO_LIKED_PRODUCTS\":\n        let nr = computedFeatures.nrOfLikeComputations;\n        let selectedProduct = products.filter((product) => product.name === id);\n\n        let x = selectedProduct[0].features[0];\n        let y = selectedProduct[0].features[1];\n\n        let newLikedX =\n          (nr / (nr + 1)) * computedFeatures.avgLiked[0] + (1 / (nr + 1)) * x;\n        let newLikedY =\n          (nr / (nr + 1)) * computedFeatures.avgLiked[1] + (1 / (nr + 1)) * y;\n\n        setLikedProducts([...likedProducts], selectedProduct[0]);\n        let cleanProducts = products.filter((product) => product.name != id);\n        setProducts(cleanProducts);\n\n        let minDist = 1000000;\n        let minIdx = 0;\n        for (let i = 0; i < cleanProducts.length; i++) {\n          let runningDist =\n            (cleanProducts[i].features[0] - newLikedX) ** 2 +\n            (cleanProducts[i].features[1] - newLikedY) ** 2;\n\n          if (\n            computedFeatures.avgDisliked[0] != 0 &&\n            computedFeatures.avgDisliked[1] != 0\n          ) {\n            runningDist +=\n              -0.3 *\n              (cleanProducts[i].features[0] -\n                computedFeatures.avgDisliked[0]) **\n                2;\n            runningDist +=\n              -0.3 *\n              (cleanProducts[i].features[1] -\n                computedFeatures.avgDisliked[1]) **\n                2;\n          }\n\n          if (runningDist < minDist) {\n            minDist = runningDist;\n            minIdx = i;\n          }\n        }\n\n        console.log(\"MIN-IDX\")\n        console.log(minIdx)\n\n        console.log(\"MIN-DIS\")\n        console.log(minDist)\n\n        computedFeatures.nrOfLikeComputations = nr + 1;\n        computedFeatures.avgLiked = [newLikedX, newLikedY];\n        setDisplayedProduct(cleanProducts[minIdx].name);\n\n        console.log(computedFeatures);\n        break;\n      case \"ADD_TO_DISLIKED_PRODUCTS\":\n        let nrDL = computedFeatures.nrOfDislikeComputations;\n        let selectedProductDL = products.filter((product) => product.name === id);\n\n        let xDL = selectedProductDL[0].features[0];\n        let yDL = selectedProductDL[0].features[1];\n\n        let newLikedXDL =\n          (nrDL / (nrDL + 1)) * computedFeatures.avgDisliked[0] +\n          (1 / (nrDL + 1)) * xDL;\n        let newLikedYDL =\n          (nrDL / (nrDL + 1)) * computedFeatures.avgDisliked[1] +\n          (1 / (nrDL + 1)) * yDL;\n\n        setLikedProducts([...dislikedProducts], selectedProductDL[0]);\n        let cleanProductsDL = products.filter((product) => product.name != id);\n        setProducts(cleanProductsDL);\n\n        let minDistDL = 1000;\n        let minIdxDL = 0;\n        for (let i = 0; i < cleanProductsDL.length; i++) {\n          let runningDistDL =\n            (cleanProductsDL[i].features[0] - computedFeatures.avgLiked[0]) **\n              2 +\n            (cleanProductsDL[i].features[1] - computedFeatures.avgLiked[1]) **\n              2;\n\n          if (\n            computedFeatures.avgDisliked[0] != 0 &&\n            computedFeatures.avgDisliked[1] != 0\n          ) {\n            runningDistDL +=\n              -0.3 *\n              (cleanProductsDL[i].features[0] -\n                computedFeatures.avgDisliked[0]) **\n                2;\n            runningDistDL +=\n              -0.3 *\n              (cleanProductsDL[i].features[1] -\n                computedFeatures.avgDisliked[1]) **\n                2;\n          } else {\n            computedFeatures.avgDisliked[0] = newLikedXDL;\n            computedFeatures.avgDisliked[1] = newLikedYDL;\n          }\n\n          if (runningDistDL < minDistDL) {\n            minDistDL = runningDistDL;\n            minIdxDL = i;\n          }\n        }\n\n        computedFeatures.nrOfDislikeComputations = nrDL + 1;\n        computedFeatures.avgDisliked = [newLikedXDL, newLikedYDL];\n        setDisplayedProduct(cleanProductsDL[minIdxDL].name);\n\n        break;\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"outer-wrap\">\n      <Card id={displayedProduct} handleChoice={handleChoice} />\n      <Bottom flipCard={flipCard} currentId={217}/>\n    </div>\n  );\n};\n\nexport default Wrapper;\n"]},"metadata":{},"sourceType":"module"}